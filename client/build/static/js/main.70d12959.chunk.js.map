{"version":3,"sources":["components/item.js","pages/home.js","pages/about.js","App.js","serviceWorker.js","index.js"],"names":["Item","props","moveButtons","display","marginLeft","upDown","fontSize","marginRight","todoMessage","state","isCompleted","editing","className","this","size","value","onChange","e","handleEditTodo","id","onClick","setState","style","handleMoveTodo","handleDeleteTodo","React","Component","Home","aboutLinkStyle","textDecoration","textAlign","alignItems","width","newButton","todos","bind","handleCreateTodo","handleSaveTodos","localStorage","setItem","newTodos","splice","alert","unshift","target","moveUp","temp","temp_arr","length","getItem","storageTodos","split","to","map","i","key","About","aboutStyle","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.70d12959.chunk.js","sourcesContent":["import React, {Fragment} from 'react'\nimport propTypes from 'prop-types'\n\nclass Item extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      isCompleted: false,\n      editing: false\n    }\n  }\n\n  moveButtons = {\n    display: 'inline-block',\n    marginLeft: '20px'\n  }\n\n  upDown = {\n    fontSize: '17px',\n    display: 'inline-block',\n    marginLeft: '2px',\n    marginRight: '2px',\n  }\n\n  todoMessage = {\n    display: 'inline-block'\n  }\n\n  render(){\n    return(\n      <div className = 'item-container'>\n        <div className = \"item-input\">\n        {this.state.editing?\n          <Fragment>\n              <input \n              size = \"15\"\n              value = {this.props.value}\n                onChange = {(e) => {\n                this.props.handleEditTodo(this.props.id, e)\n              }}/>\n            <button onClick = {() => {\n                this.setState({\n                  editing: false\n                })\n              }}>OK</button>\n            \n          </Fragment>\n           :\n           <Fragment>\n          <p style = {this.todoMessage} \n          onClick = {() => {\n              this.setState({\n                editing:true\n              })\n            }}>{this.props.value}</p>\n          \n          <div style = {this.moveButtons}>\n            \n          <button onClick = {() => {\n            this.props.handleMoveTodo(this.props.id, true)\n          }}\n          style = {this.upDown}>∧</button>\n          <button \n          onClick = {() => {\n            this.props.handleMoveTodo(this.props.id, false)\n          }}\n          style = {this.upDown}>∨</button>\n          </div>\n          </Fragment>\n        }\n        </div>\n\n\n        <span className = \"item-delete-btn\">\n          <button onClick = {()=>{\n              this.props.handleDeleteTodo(this.props.id);\n            }}>x</button>\n        </span>\n      </div>\n    )\n  }\n}\n\nItem.propTypes = {\n  value: propTypes.string,\n  id: propTypes.number\n}\n\nexport default Item\n","import React from 'react';\nimport Item from '../components/item.js'\nimport './home.css';\nimport {Link} from 'react-router-dom'; \n\nclass Home extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      todos: []\n    }\n    this.handleEditTodo = this.handleEditTodo.bind(this)\n    this.handleDeleteTodo = this.handleDeleteTodo.bind(this)\n    this.handleCreateTodo = this.handleCreateTodo.bind(this)\n    this.handleSaveTodos = this.handleSaveTodos.bind(this)\n    this.handleMoveTodo = this.handleMoveTodo.bind(this)\n  }\n\n  async handleSaveTodos(){\n    await localStorage.setItem('todos', this.state.todos)\n  }\n\n  handleDeleteTodo(id){\n    var newTodos = this.state.todos\n    newTodos.splice(id, 1);\n    this.setState({\n      todos: newTodos\n    })\n    this.handleSaveTodos()\n  }\n\n  handleCreateTodo(){\n    const newTodos = this.state.todos;\n    if(newTodos[0]===\"-\"){\n      return alert(\"Please edit the most recent todo.\")\n    }\n    newTodos.unshift(\"-\");\n    this.setState({\n      todos: newTodos\n    })\n    this.handleSaveTodos()\n  }\n\n  handleEditTodo(id, e){\n    var newTodos = this.state.todos;\n    newTodos[id] = e.target.value;\n    this.setState({\n      todos: newTodos\n    })\n    this.handleSaveTodos()\n  }\n\n  handleMoveTodo(id, moveUp){\n    if(moveUp){\n      //create temp\n      if(id>0){\n        var temp_arr = this.state.todos\n        var temp = temp_arr[id-1]\n        temp_arr[id-1] = temp_arr[id]\n        temp_arr[id] = temp\n        this.setState({\n          todos: temp_arr\n        })\n      }\n    \n    }else{\n      //create temp\n      if(id<this.state.todos.length - 1){\n        var temp_arr = this.state.todos\n        var temp = temp_arr[id+1]\n        temp_arr[id+1] = temp_arr[id]\n        temp_arr[id] = temp\n        this.setState({\n          todos: temp_arr\n        })\n      }\n      \n    }\n  }\n\n  async componentDidMount(){\n    //Load the todos into the buffer\n    var storageTodos = await localStorage.getItem('todos');\n    if(!storageTodos){\n      storageTodos = \"-\"\n    }\n    //parse the string\n    storageTodos = storageTodos.split(\",\")\n    this.setState({\n      todos: storageTodos\n    })\n  }\n\n  aboutLinkStyle = {\n    textDecoration: 'none',\n    textAlign: 'center',\n    alignItems: 'center', \n    display: 'flex', \n    width: '3em',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  }\n\n  newButton = {\n    fontSize: '20px',\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  }\n\n  render(){\n    return(\n      <div className = 'home-container'>\n        <h1>Your Todos:</h1> \n        <Link style = {this.aboutLinkStyle} to = \"/about\">About</Link>\n        <div className = 'todo-container'>\n\n          <button onClick = {this.handleCreateTodo}\n          style = {this.newButton}>New</button>\n\n          {this.state.todos.map((e, i)=> {\n            return(\n              <Item key = {i}\n              id = {i}\n              handleDeleteTodo = {this.handleDeleteTodo}\n              handleEditTodo = {this.handleEditTodo}\n              handleMoveTodo = {this.handleMoveTodo}\n              value = {this.state.todos[i]}/>)\n          })}\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Home\n","import React, {Fragment} from 'react';\n\nclass About extends React.Component{\n\n    aboutStyle = {\n        marginLeft: '15px',\n        marginRight: '15px',\n    }\n\n    render(){\n        return(\n            <Fragment>\n                <h1 style = {{textAlign: 'center'}}>About Todos:</h1>\n\n                <p style = {this.aboutStyle}>Piero Panariello Sept. 2020 (c)</p>\n                <p style = {this.aboutStyle}>This application is built using React. It uses local storage to remember your todos, which means they will be remembered next time you open the application.</p>\n\n            </Fragment>\n        )\n    }\n}\n\nexport default About; ","import React from 'react';\nimport './App.css';\nimport Home from './pages/home.js';\nimport About from './pages/about.js';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path = \"/\" component = {Home}/>\n        <Route exact path = '/about' component = {About}/>\n      </Switch>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}